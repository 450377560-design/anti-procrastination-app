name: Build Android APK v1.0.1 (fat APK, auto-detect project dir)

on:
  workflow_dispatch: {}

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      # 1) 自动定位 Flutter 项目根目录（含 pubspec.yaml）
      - name: Locate Flutter project root
        id: locate
        run: |
          set -euo pipefail
          echo "no_pubspec=false" >> "$GITHUB_OUTPUT"
          if [ -f pubspec.yaml ]; then
            echo "dir=." >> "$GITHUB_OUTPUT"
            exit 0
          fi
          hit="$(git ls-files | grep -E '(^|/)(pubspec\.yaml)$' | head -n1 || true)"
          if [ -n "$hit" ]; then
            echo "dir=$(dirname "$hit")" >> "$GITHUB_OUTPUT"
          else
            echo "dir=." >> "$GITHUB_OUTPUT"
            echo "no_pubspec=true" >> "$GITHUB_OUTPUT"
          fi

      # 2) 如果没有 pubspec.yaml，则在定位到的目录（通常就是仓库根）初始化一个 Flutter 项目
      - name: Bootstrap Flutter project (if missing)
        if: ${{ steps.locate.outputs.no_pubspec == 'true' }}
        run: |
          set -euo pipefail
          echo "No pubspec.yaml found; creating a Flutter project at repo root..."
          flutter create . --platforms=android --project-name anti_procrastination --org com.example.antipro

      - name: Show project tree
        run: |
          pwd
          ls -lah
        working-directory: ${{ steps.locate.outputs.dir }}

      - name: Flutter pub get
        run: flutter pub get
        working-directory: ${{ steps.locate.outputs.dir }}

      - name: Disable Gradle FS watching (stability)
        run: echo "org.gradle.vfs.watch=false" >> android/gradle.properties
        working-directory: ${{ steps.locate.outputs.dir }}

      # 3) 构建“胖包”（不拆 ABI，不瘦身），最接近你 v1.0 的成功方式
      - name: Build fat APK (no split, no shrink)
        run: |
          flutter clean
          flutter build apk --release
        working-directory: ${{ steps.locate.outputs.dir }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: ${{ steps.locate.outputs.dir }}/build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: error
